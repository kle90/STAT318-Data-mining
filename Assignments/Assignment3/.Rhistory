shrinkage=0.01)
summary(boost_tree)
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=1000,
interaction.depth=1,
shrinkage=0.1)
summary(boost_tree)
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=1000,
interaction.depth=1,
shrinkage=0.05)
summary(boost_tree)
summary(boost_carseats)
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=5000,
interaction.depth=4,
shrinkage=0.05)
summary(boost_tree)
Train$ShelveLoc = as.factor(Train$ShelveLoc)
Train$Urban = as.factor(Train$Urban)
Train$US = as.factor(Train$US)
boost_carseats = gbm(Sales~., distribution="gaussian", n.trees=1000, interaction.depth=1, shrinkage=0.01, data=Train)
summary(boost_carseats)
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=5000,
interaction.depth=4,
shrinkage=0.01)
summary(boost_tree)
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=5000,
interaction.depth=1,
shrinkage=0.01)
summary(boost_tree)
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=1000,
interaction.depth=1,
shrinkage=0.01)
summary(boost_tree)
summary(boost_tree)
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=5000,
interaction.depth=1,
shrinkage=0.01)
summary(boost_tree)
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=5000,
interaction.depth=1,
shrinkage=0.05)
summary(boost_tree)
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=500,
interaction.depth=1,
shrinkage=0.01)
summary(boost_tree)
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=500,
interaction.depth=1,
shrinkage=0.1)
summary(boost_tree)
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=1000,
interaction.depth=1,
shrinkage=0.1)
summary(boost_tree)
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=500,
interaction.depth=1,
shrinkage=0.05)
summary(boost_tree)
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=100,
interaction.depth=1,
shrinkage=0.05)
summary(boost_tree)
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=100,
interaction.depth=4,
shrinkage=0.05)
summary(boost_tree)
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=100,
interaction.depth=2,
shrinkage=0.05)
summary(boost_tree)
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=100,
interaction.depth=1,
shrinkage=0.05)
summary(boost_tree)
summary(boost_carseats)
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=5000,
interaction.depth=1,
shrinkage=0.05)
summary(boost_tree)
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=5000,
interaction.depth=1,
shrinkage=0.01)
summary(boost_tree)
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=5000,
interaction.depth=4,
shrinkage=0.05)
summary(boost_tree)
boost_test_MSE <- (mean((predict(boost_tree,
newdata=training) - training$Sales)^2))
boost_train_MSE <- (mean((predict(boost_tree,
newdata=testing) - testing$Sales)^2))
boost_test_MSE
boost_train_MSE
train_mse_boost = (mean((predict(boost_carseats, newdata=Train) - Train$Sales)^2))
test_mse_boost = (mean((predict(boost_carseats, newdata=Test) - Test$Sales)^2))
test_mse_boost
train_mse_boost
test_mse_boost
boost_test_MSE
boost_train_MSE
MSE_calc <- function(x) {
MSE_test_calc <- (mean((predict(x,
newdata=training) - training$Sales)^2))
MSE_train_calc <- (mean((predict(x,
newdata=testing) - testing$Sales)^2))
}
boost_test_MSE <- MSE_calc(boost_tree)[0]
boost_train_MSE <- MSE_calc(boost_tree)[1]
boost_test_MSE
boost_train_MSE
MSE_calc <- function(x) {
MSE_test_calc <- (mean((predict(x,
newdata=training) - training$Sales)^2))
MSE_train_calc <- (mean((predict(x,
newdata=testing) - testing$Sales)^2))
return(c(MSE_test_calc, MSE_train_calc))
}
boost_test_MSE <- MSE_calc(boost_tree)[0]
boost_train_MSE <- MSE_calc(boost_tree)[1]
boost_test_MSE
boost_train_MSE
boost_test_MSE <- MSE_calc(boost_tree)[1]
boost_train_MSE <- MSE_calc(boost_tree)[2]
boost_test_MSE
boost_train_MSE
train_mse_boost
test_mse_boost
boost_train_MSE <- MSE_calc(boost_tree)[1]
boost_test_MSE <- MSE_calc(boost_tree)[2]
boost_test_MSE
boost_train_MSE
boost_test_MSE
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=5000,
interaction.depth=4,
shrinkage=0.05)
summary(boost_tree)
boost_train_MSE <- MSE_calc(boost_tree)[1]
boost_test_MSE <- MSE_calc(boost_tree)[2]
boost_train_MSE
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=1000,
interaction.depth=2,
shrinkage=0.05)
summary(boost_tree)
boost_train_MSE <- MSE_calc(boost_tree)[1]
boost_test_MSE <- MSE_calc(boost_tree)[2]
boost_train_MSE
boost_test_MSE
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=5000,
interaction.depth=1,
shrinkage=0.01)
summary(boost_tree)
boost_test_MSE <- MSE_calc(boost_tree)[2]
boost_train_MSE
boost_test_MSE
train_mse_boost
test_mse_boost
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=10000,
interaction.depth=1,
shrinkage=0.01)
summary(boost_tree)
summary(boost_tree)
boost_train_MSE <- MSE_calc(boost_tree)[1]
boost_test_MSE <- MSE_calc(boost_tree)[2]
boost_test_MSE <- MSE_calc(boost_tree)[2]
boost_train_MSE
boost_test_MSE
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=5000,
interaction.depth=4,
shrinkage=0.01)
boost_train_MSE <- MSE_calc(boost_tree)[1]
boost_test_MSE <- MSE_calc(boost_tree)[2]
boost_train_MSE
boost_test_MSE
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=5000,
interaction.depth=1,
shrinkage=0.01)
summary(boost_tree)
summary(boost_tree)
boost_train_MSE <- MSE_calc(boost_tree)[1]
boost_train_MSE <- MSE_calc(boost_tree)[1]
boost_test_MSE <- MSE_calc(boost_tree)[2]
boost_train_MSE
boost_test_MSE
train_mse_boost
test_mse_boost
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=1000,
interaction.depth=2,
shrinkage=0.05)
summary(boost_tree)
boost_train_MSE <- MSE_calc(boost_tree)[1]
boost_test_MSE <- MSE_calc(boost_tree)[2]
boost_train_MSE
boost_test_MSE
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=5000,
interaction.depth=1,
shrinkage=0.01)
summary(boost_tree)
boost_train_MSE <- MSE_calc(boost_tree)[1]
boost_test_MSE <- MSE_calc(boost_tree)[2]
boost_train_MSE
boost_test_MSE
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=5000,
interaction.depth=1,
shrinkage=0.005)
summary(boost_tree)
boost_train_MSE <- MSE_calc(boost_tree)[1]
boost_test_MSE <- MSE_calc(boost_tree)[2]
boost_train_MSE
boost_test_MSE
train_mse_boost
test_mse_boost
train <- sample(1:nrow(training), nrow(training)/2)
training[train,]
training$ShelveLoc <- as.factor(training$ShelveLoc)
training$Urban  <- as.factor(training$Urban)
training$US  <- as.factor(training$US)
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=5000,
interaction.depth=4,
shrinkage=0.05)
MSE_calc <- function(x) {
MSE_train_calc <- (mean((predict(x,
newdata=training) - training$Sales)^2))
MSE_test_calc <- (mean((predict(x,
newdata=testing) - testing$Sales)^2))
return(c(MSE_train_calc, MSE_test_calc))
}
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=5000,
interaction.depth=1,
shrinkage=0.005)
summary(boost_tree)
boost_train_MSE <- MSE_calc(boost_tree)[1]
boost_test_MSE <- MSE_calc(boost_tree)[2]
boost_train_MSE
boost_test_MSE
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=5000,
interaction.depth=1,
shrinkage=0.005)
summary(boost_tree)
summary(boost_tree)
boost_train_MSE <- MSE_calc(boost_tree)[1]
boost_train_MSE <- MSE_calc(boost_tree)[1]
boost_test_MSE <- MSE_calc(boost_tree)[2]
boost_test_MSE
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=5000,
interaction.depth=1,
shrinkage=0.005)
summary(boost_tree)
boost_train_MSE <- MSE_calc(boost_tree)[1]
boost_test_MSE <- MSE_calc(boost_tree)[2]
boost_train_MSE
boost_test_MSE
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=1000,
interaction.depth=1,
shrinkage=0.005)
summary(boost_tree)
boost_train_MSE <- MSE_calc(boost_tree)[1]
boost_test_MSE <- MSE_calc(boost_tree)[2]
boost_train_MSE
boost_test_MSE
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=5000,
interaction.depth=1,
shrinkage=0.01)
summary(boost_tree)
boost_train_MSE <- MSE_calc(boost_tree)[1]
boost_test_MSE <- MSE_calc(boost_tree)[2]
boost_train_MSE
boost_test_MSE
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=1000,
interaction.depth=1,
shrinkage=0.005)
summary(boost_tree)
boost_train_MSE <- MSE_calc(boost_tree)[1]
boost_test_MSE <- MSE_calc(boost_tree)[2]
boost_train_MSE
boost_test_MSE
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=5000,
interaction.depth=1,
shrinkage=0.01)
summary(boost_tree)
boost_train_MSE <- MSE_calc(boost_tree)[1]
boost_test_MSE <- MSE_calc(boost_tree)[2]
boost_train_MSE
boost_test_MSE
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=1000,
interaction.depth=2,
shrinkage=0.05)
summary(boost_tree)
boost_train_MSE <- MSE_calc(boost_tree)[1]
boost_test_MSE <- MSE_calc(boost_tree)[2]
boost_train_MSE
boost_test_MSE
boost_train_MSE <- MSE_calc(boost_tree)[1]
boost_test_MSE <- MSE_calc(boost_tree)[2]
boost_train_MSE
boost_test_MSE
MSE_calc <- function(x) {
MSE_train_calc <- (mean((predict(x,
newdata=training) - training$Sales)^2))
MSE_test_calc <- (mean((predict(x,
newdata=testing) - testing$Sales)^2))
return(c(MSE_train_calc, MSE_test_calc))
}
boost_tree <- gbm(Sales~.,
data=training[train,],
distribution="gaussian",
n.trees=1000,
interaction.depth=1,
shrinkage=0.005)
summary(boost_tree)
boost_train_MSE <- MSE_calc(boost_tree)[1]
boost_test_MSE <- MSE_calc(boost_tree)[2]
boost_train_MSE
boost_test_MSE
boost_train_MSE
boost_test_MSE
boost_train_MSE
boost_test_MSE
#c)
randForest <- randomForest(Sales~.,data=training,importance=TRUE)
RF_train_MSE <- (mean((predict(randForest, newdata=training) - training$Sales)^2))
RF_test_MSE <- (mean((predict(randForest, newdata=testing) - testing$Sales)^2))
RF_train_MSE
RF_test_MSE
RF_test_MSE <- (mean((predict(randForest, newdata=testing) - testing$Sales)^2))
#c)
randForest <- randomForest(Sales~.,data=training,importance=TRUE)
RF_train_MSE <- (mean((predict(randForest, newdata=training) - training$Sales)^2))
RF_test_MSE <- (mean((predict(randForest, newdata=testing) - testing$Sales)^2))
RF_train_MSE
RF_test_MSE
bagged <- randomForest(Sales~.,data=training,mtry=9,importance=TRUE)
bagged_train_MSE <- (mean((predict(bagged, newdata=training) - training$Sales)^2))
bagged_test_MSE <- (mean((predict(bagged, newdata=testing) - testing$Sales)^2))
bagged_train_MSE
bagged_test_MSE
library(tree)
library(gbm)
library(randomForest)
setwd("H:/Documents/STAT318/Assignments/Assignment3")
training = read.csv("carseatsTrain.csv")
testing = read.csv("carseatsTest.csv")
```{r}
library(tree)
library(gbm)
library(randomForest)
library(MASS)
setwd("H:/Documents/STAT318/Assignments/Assignment3")
training = read.csv("carseatsTrain.csv")
testing = read.csv("carseatsTest.csv")
#a)
train_tree <- tree(Sales~., data=training)
plot(train_tree)
text(train_tree,
cex=0.5)
trainingMSE <- (mean((predict(train_tree,
newdata=training) - training$Sales) ^ 2))
testingMSE <- (mean((predict(train_tree,
newdata=testing) - testing$Sales) ^ 2))
trainingMSE
testingMSE
trainingMSE
testingMSE
#b)
prune <- cv.tree(train_tree)
prune
tree_prune <- prune.tree(train_tree, best=8)
plot(tree_prune)
text(tree_prune,
cex=0.5)
pruneMSE <- (mean((predict(tree_prune,
newdata=testing) - testing$Sales)^2))
pruneMSE
#c)
randForest <- randomForest(Sales~.,data=training,importance=TRUE)
RF_train_MSE <- (mean((predict(randForest, newdata=training) - training$Sales)^2))
RF_test_MSE <- (mean((predict(randForest, newdata=testing) - testing$Sales)^2))
RF_train_MSE
RF_test_MSE
bagged <- randomForest(Sales~.,data=training,mtry=9,importance=TRUE)
bagged_train_MSE <- (mean((predict(bagged, newdata=training) - training$Sales)^2))
bagged_test_MSE <- (mean((predict(bagged, newdata=testing) - testing$Sales)^2))
bagged_train_MSE
bagged_test_MSE
bagged_train_MSE
bagged_test_MSE
bagged_test_MSE
carseat_tree = tree(Sales~., data=Train)
summary(carseat_tree)
plot(carseat_tree)
text(carseat_tree,
cex=0.7)
volume <- rpart(Volume ~ ., data = trees)
library(rpart)
volume <- rpart(Volume ~ ., data = trees)
#a)
train_tree <- tree(Sales~., data=training)
plot(train_tree)
text(train_tree,
cex=0.5)
#a)
plot.new()
train_tree <- tree(Sales~., data=training)
